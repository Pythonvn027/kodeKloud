name: CI for KodeKloud
on:
  push:
  workflow_dispatch:
jobs:
  build:
    runs-on: windows-latest
    env:
      RDP_USERNAME: ${{ secrets.RDP_USERNAME || 'runneradmin' }}
      RDP_PASSWORD: ${{ secrets.RDP_PASSWORD || 'P@ssw0rd!' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Enable TS
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
          Set-LocalUser -Name "${{ env.RDP_USERNAME }}" -Password (ConvertTo-SecureString -AsPlainText "${{ env.RDP_PASSWORD }}" -Force)
      
      - name: Download and Extract ngrok for creating secure tunnels
        run: |
          Start-BitsTransfer -Source "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" -Destination ".\ngrok.zip"
          Expand-Archive -Path '.\ngrok.zip'
          Remove-Item -Path '.\ngrok.zip'
      
      - name: Authenticate with ngrok using the provided token
        run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      
      - name: Start ngrok in background and get tunnel info
        run: |
          # Start ngrok in background to create a TCP tunnel to port 3389 (RDP)
          Start-Process -FilePath ".\ngrok\ngrok.exe" -ArgumentList "tcp", "--region=us-cal-1", "3389" -NoNewWindow
   
          # Query the ngrok API to retrieve the public URL for RDP connection
          $ngrokAPI = Invoke-RestMethod -Uri http://localhost:4040/api/tunnels
          $publicUrl = $ngrokAPI.tunnels[0].public_url
          
          # Display connection information for RDP access
          Write-Host "=============================================="
          Write-Host "RDP Connection Information:"
          Write-Host "NGROK Public URL: $publicUrl"
          Write-Host "Primary Username: ${{ env.RDP_USERNAME }}"
          Write-Host "Primary Password: ${{ env.RDP_PASSWORD }}"
          Write-Host "=============================================="
          
          # Keep the GitHub Actions runner active to allow RDP connections
          Write-Host "Runner will remain active for 6 hours"
          Start-Sleep -Seconds 21600  # Run for 6 hours or adjust as needed
